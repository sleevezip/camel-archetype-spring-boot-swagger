{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Workflow",
    "description": "Workflow REST service"
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "schemes": [
    "http"
  ],
  "paths": {
    "/workflow": {
      "get": {
        "description": "This operation will returen all workflow documents",
        "tags": [
          "workflow"
        ],
        "summary": "Find all workflows",
        "operationId": "get-workflows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully returned a list of workflows",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          }
        }
      },
      "post": {
        "description": "This operation will returen all workflow documents",
        "tags": [
          "workflow"
        ],
        "summary": "Create a Service",
        "operationId": "post-workflow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "workflow data model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created a new workflow"
          }
        }
      }
    },
    "/workflow/{id}": {
      "get": {
        "tags": [
          "workflow"
        ],
        "summary": "Find workflow by ID",
        "operationId": "get-workflow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the workflow",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow successfully returned",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          }
        }
      },
      "put": {
        "tags": [
          "workflow"
        ],
        "summary": "Update a workflow",
        "operationId": "put-workflow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the workflow",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow successfully updated"
          }
        }
      }
    }
  },
  "definitions": {
    "WorkflowAudit": {
      "type": "object",
      "properties": {
        "when": {
          "type": "string",
          "format": "date-time"
        },
        "who": {
          "type": "string"
        },
        "what": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "WorkflowPayload": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "customerId": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        },
        "orderItems": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "WorkflowActionsConditions": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "result": {
          "type": "string"
        }
      }
    },
    "Workflow": {
      "type": "object",
      "required": [
        "workflowType"
      ],
      "properties": {
        "workflowType": {
          "type": "string",
          "description": "Type of the workflow"
        },
        "workflowId": {
          "type": "string"
        },
        "workflowConversationIdentifier": {
          "type": "string"
        },
        "creationTimeStamp": {
          "type": "string",
          "format": "date-time"
        },
        "creator": {
          "type": "string"
        },
        "workflowStatus": {
          "type": "string"
        },
        "workflowStatusTimeStamp": {
          "type": "string",
          "format": "date-time"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowActions"
          }
        },
        "audit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowAudit"
          }
        },
        "payload": {
          "$ref": "#/definitions/WorkflowPayload"
        }
      },
      "description": "Represents an Workflow definition file"
    },
    "WorkflowActions": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "result": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowActionsConditions"
          }
        }
      }
    }
  }
}